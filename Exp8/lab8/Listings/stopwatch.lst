C51 COMPILER V9.60.7.0   STOPWATCH                                                         03/14/2023 15:55:12 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE STOPWATCH
OBJECT MODULE PLACED IN .\Objects\stopwatch.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE stopwatch.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\stopwatch.lst) TABS(2) OBJECT(.\Objects\stopwatch.obj)

line level    source

   1          #include <at89c5131.h>
   2          #include "lcd.h"
   3          
   4          sbit DIP=P1^0;
   5          sbit LED1=P3^4;
   6          
   7          unsigned int a=0;         //Lower nibble (TL0)
   8          unsigned int b=0;         //Upper nibble (TH0)
   9          unsigned int count=0;     //Total count after concatenation
  10          unsigned int mins=0;      //Minutes count
  11          unsigned int secs=0;      //Seconds count
  12          unsigned int mins_1;
  13          unsigned int mins_2;
  14          unsigned int secs_1;
  15          unsigned int secs_2;
  16          
  17          unsigned char mins_lcd1='0';
  18          unsigned char mins_lcd2='0';
  19          unsigned char secs_lcd1='0';
  20          unsigned char secs_lcd2='0';
  21          
  22          code unsigned char display_msg1[]="  STOPWATCH ON  ";
  23          code unsigned char display_msg2[]="  STOPWATCH OFF ";
  24          
  25          void timer0_isr () interrupt 1
  26          {
  27   1         LED1 = ~LED1;
  28   1         TH0 = 0xFF;
  29   1         TL0 = 0xC4;
  30   1         TF0 = 0;
  31   1         //Reload values for TH1 and TL1. Start timer 1.
  32   1         
  33   1      }
  34          
  35          //void AFG()
  36          //{
  37          //  //TMOD = 0x15;
  38          //  TMOD = 0x10; //mode 1 timer 1
  39          //  TH1 = 0x7D;  //Values for Timer 1 TH1
  40          //  TL1 = 0xCA;  //Values for Timer 1 TL1
  41          //  ET1 = 1;
  42          //  EA = 1;      //activate global interrupts
  43          //  TR1 = 1;     //start timer 1   
  44          //}
  45          
  46          void main(void)
  47          {
  48   1        //AFG();
  49   1      
  50   1        TMOD = 0x05;
  51   1        TH0 = 0xFF;
  52   1        TL0 = 0xC4;
  53   1        ET0 = 1;
  54   1        EA = 1;
C51 COMPILER V9.60.7.0   STOPWATCH                                                         03/14/2023 15:55:12 PAGE 2   

  55   1        TR0 = 1;
  56   1        
  57   1         lcd_init();
  58   1         while(1)
  59   1         {
  60   2           while(DIP == 1)              //External control through DIP switch
  61   2           {
  62   3             TR0 = 1;
  63   3              
  64   3             a = TL0;
  65   3             b = TH0;
  66   3             count = 256*b + a;
  67   3             count = count/60;         //Every 60 cycles make up 1 s
  68   3             mins = count/60;
  69   3             secs = count-(mins*60);
  70   3             mins_1 = mins/10;
  71   3             mins_2 = mins-(10*mins_1);
  72   3             secs_1 = secs/10;
  73   3             secs_2 = secs-(10*secs_1);
  74   3             mins_lcd1 = mins_1 + 48;
  75   3             mins_lcd2 = mins_2 + 48;
  76   3             secs_lcd1 = secs_1 + 48;
  77   3             secs_lcd2 = secs_2 + 48;   //Converting int to char for LCD display
  78   3              
  79   3             lcd_cmd(0x80);
  80   3             lcd_write_string(display_msg1);
  81   3             lcd_cmd(0xC5);
  82   3             lcd_write_char(mins_lcd1);
  83   3             lcd_write_char(mins_lcd2);
  84   3             lcd_write_char(':');
  85   3             lcd_write_char(secs_lcd1);
  86   3             lcd_write_char(secs_lcd2);
  87   3           }
  88   2         
  89   2           while(DIP == 0)
  90   2           {
  91   3             TR0 = 0;
  92   3             TL0 = 0;
  93   3             TH0 = 0;                   //To start the stopwatch again from 0 once it has been turned OFF and then 
             -turned ON
  94   3             
  95   3             lcd_cmd(0x80);
  96   3             lcd_write_string(display_msg2);     
  97   3             lcd_cmd(0xC5);
  98   3             lcd_write_char(mins_lcd1);
  99   3             lcd_write_char(mins_lcd2);
 100   3             lcd_write_char(':');
 101   3             lcd_write_char(secs_lcd1);
 102   3             lcd_write_char(secs_lcd2);
 103   3           }
 104   2         }
 105   1         
 106   1      }
 107          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    441    ----
   CONSTANT SIZE    =     34    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22       3
C51 COMPILER V9.60.7.0   STOPWATCH                                                         03/14/2023 15:55:12 PAGE 3   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
