C51 COMPILER V9.60.7.0   LCD                                                               02/28/2023 00:57:42 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lcd.l
                    -st) TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          #include <at89c5131.h>
   2          #include "lcd.h"
   3          
   4          code unsigned char display_msg1[]=" START PROGRAM  ";           //Display msg on 1st line of lcd
   5          code unsigned char display_msg2[]="  FIRST INPUT   ";           //Display msg on 1st line of lcd
   6          code unsigned char display_msg3[]="   NEXT INPUT   ";           //Display msg on 1st line of lcd
   7          code unsigned char display_msg4[]="   SORTING...   ";           //Display msg on 1st line of lcd
   8          code unsigned char display_msg5[]="    SORTING     ";           //Display msg on 1st line of lcd
   9          code unsigned char display_msg6[]="   COMPLETED    ";           //Display msg on 2nd line of lcd
  10          code unsigned char display_msg7[]="  NUMBER TO BE  ";           //Display msg on 1st line of lcd
  11          code unsigned char display_msg8[]="    SEARCHED    ";           //Display msg on 2nd line of lcd
  12          code unsigned char display_msg9[]="  THE INDEX IS  ";           //Display msg on 1st line of lcd
  13          code unsigned char display_msg10[]="     NUMBER     ";          //Display msg on 1st line of lcd
  14          code unsigned char display_msg11[]="   NOT FOUND    ";          //Display msg on 2nd line of lcd
  15          
  16          unsigned int time=5000;                                         //Delay of 5 sec
  17          unsigned int i=0;  
  18          unsigned int j=0;
  19          unsigned int k=0;
  20          unsigned int min=0;
  21          
  22          unsigned char input[]={0,0,0,0,0};
  23          unsigned char search=0;
  24          
  25          void main()
  26          {
  27   1        lcd_init();
  28   1        lcd_cmd(0x80);                          //Move cursor to first line
  29   1        P1=0x0F;
  30   1        lcd_write_string(display_msg1);
  31   1        msdelay(time);
  32   1        
  33   1        lcd_cmd(0x80);                          //Move cursor to first line
  34   1        lcd_write_string(display_msg2);
  35   1        msdelay(time);                          //Take first input
  36   1        P1=P1<<4;                               //Swap the nibbles of P1
  37   1        P1=P1 & 0xF0;
  38   1        input[0]=P1;                            //Store the first element and start the LEDs
  39   1        msdelay(time);
  40   1        P1=P1 & 0x0F;
  41   1        msdelay(time/5);                        //Switch off the LEDs
  42   1        P1=P1 | 0x0F;
  43   1        
  44   1        for(i=1; i<4; i++){
  45   2        lcd_cmd(0x80);                          //Move cursor to first line
  46   2        lcd_write_string(display_msg3);
  47   2        msdelay(time);                          //Take next input
  48   2        P1=P1<<4;
  49   2        P1=P1 & 0xF0;
  50   2        input[i]=P1;                            //Store the element and start the LEDs
  51   2        msdelay(time);
  52   2        P1=P1 & 0x0F;                           
  53   2        msdelay(time/5);                        //Switch off the LEDs
  54   2        P1=P1 | 0x0F;
C51 COMPILER V9.60.7.0   LCD                                                               02/28/2023 00:57:42 PAGE 2   

  55   2        }
  56   1        
  57   1        lcd_cmd(0x80);                          //Move cursor to first line   
  58   1        lcd_write_string(display_msg3);
  59   1        msdelay(time);
  60   1        lcd_cmd(0x80);
  61   1        lcd_write_string(display_msg4); 
  62   1        P1=P1<<4;
  63   1        P1=P1 & 0xF0;
  64   1        input[4]=P1;                            //Store the element and start the LEDs
  65   1        msdelay(time);
  66   1        P1=P1 & 0x0F;
  67   1        lcd_cmd(0x80);
  68   1        lcd_write_string(display_msg5);
  69   1        lcd_cmd(0xC0);
  70   1        lcd_write_string(display_msg6);
  71   1        msdelay(time/5);                        //All inputs taken, now show the sorted outputs
  72   1        
  73   1        //SORTING ALGORITHM
  74   1        for(i=0; i<5; i++){
  75   2          for(j=0; j<5-i; j++){
  76   3              if(input[j+1]<input[j]){
  77   4                min=input[j+1];
  78   4                input[j+1]=input[j];
  79   4                input[j]=min;
  80   4              } 
  81   3          }
  82   2        }
  83   1        for(i=0; i<5; i++){
  84   2          P1=input[i];
  85   2          msdelay(time);
  86   2          P1=0x0F;
  87   2          msdelay(time/5);
  88   2        }
  89   1        
  90   1        P1=0x0F;
  91   1        msdelay(time/5);
  92   1        P1=0xFF;
  93   1        lcd_cmd(0x80);
  94   1        lcd_write_string(display_msg7);
  95   1        lcd_cmd(0xC0);
  96   1        lcd_write_string(display_msg8);
  97   1        msdelay(time);                          //Take input for the number to be searched
  98   1        P1=P1 & 0x0F;
  99   1        search=P1;
 100   1        search=search<<4;
 101   1        
 102   1        lcd_cmd(0x01);                          //Clear the LEDs and LCD
 103   1        msdelay(time/5);  
 104   1        
 105   1        //SEARCH ALGORITHM
 106   1        for(i=0; i<5; i++){
 107   2        if(input[i]==search){
 108   3          k=1;
 109   3          i=i<<4;
 110   3          P1=i;
 111   3          lcd_cmd(0x80);
 112   3          lcd_write_string(display_msg9);
 113   3          break;                                //Number found
 114   3         }
 115   2        else continue;
 116   2        }
C51 COMPILER V9.60.7.0   LCD                                                               02/28/2023 00:57:42 PAGE 3   

 117   1        if(k==0){
 118   2        P1=0xFF;
 119   2        lcd_cmd(0x80);
 120   2        lcd_write_string(display_msg10);
 121   2        lcd_cmd(0xC0);
 122   2        lcd_write_string(display_msg11);        //Not found
 123   2        }
 124   1      
 125   1        while(1);
 126   1          
 127   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    716    ----
   CONSTANT SIZE    =    187    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
