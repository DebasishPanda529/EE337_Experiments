C51 COMPILER V9.60.7.0   MAIN_2                                                            02/27/2023 19:45:53 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN_2
OBJECT MODULE PLACED IN .\Objects\main_2.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main_2.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ma
                    -in_2.lst) TABS(2) OBJECT(.\Objects\main_2.obj)

line level    source

   1          #include <at89c5131.h>
   2          #include "lcd.h"
   3          
   4          code unsigned char display_msg1[]="  START PROGRAM ";
   5          code unsigned char display_msg2[]="   FIRST INPUT  ";
   6          code unsigned char display_msg3[]="   NEXT INPUT   ";
   7          code unsigned char display_msg4[]="   SORTING...   ";
   8          code unsigned char display_msg5[]="     SORTING    ";
   9          code unsigned char display_msg6[]="    COMPLETED   ";
  10          code unsigned char display_msg7[]="  NUMBER TO BE  ";
  11          code unsigned char display_msg8[]="    SEARCHED    ";
  12          code unsigned char display_msg9[]="  THE INDEX IS  ";
  13          code unsigned char display_msg10[]="     NUMBER     ";
  14          code unsigned char display_msg11[]="    NOT FOUND   ";
  15          unsigned char i=1;
  16          unsigned char my_array[]={0,0,0,0,0};
  17          unsigned char j=0;
  18          unsigned char m;
  19          
  20          void main(){
  21   1        
  22   1        lcd_init();
  23   1        P1=0x0F;                                // Made the lower nibble as input
  24   1        lcd_cmd(0x80);                          //Move cursor to first line
  25   1        lcd_write_string(display_msg1);
  26   1        msdelay(5000);
  27   1        
  28   1        lcd_cmd(0x80);                          //Move cursor to first line
  29   1        lcd_write_string(display_msg2);
  30   1        msdelay(5000);
  31   1        P1=P1<<4;
  32   1        my_array[0]=P1 & 0xF0;
  33   1        P1=P1 | 0x0F;
  34   1        lcd_cmd(0x80);                          //Move cursor to first line
  35   1        lcd_write_string(display_msg3);
  36   1        
  37   1        for(i=1; i<4;i++){
  38   2          msdelay(5000);
  39   2          P1= P1 & 0x0F;
  40   2          msdelay(1000);
  41   2          P1=P1<<4;
  42   2          my_array[i]=P1 & 0xF0;
  43   2          P1=P1 | 0x0F;
  44   2        }
  45   1        msdelay(5000);
  46   1        P1= P1 & 0x0F;
  47   1        msdelay(1000);
  48   1        lcd_cmd(0x80);                          //Move cursor to first line
  49   1        lcd_write_string(display_msg4);
  50   1        P1=P1<<4;
  51   1        my_array[4]=P1 & 0xF0;
  52   1        msdelay(5000);
  53   1        P1=0x00;
  54   1        lcd_cmd(0x80);                          //Move cursor to first line
C51 COMPILER V9.60.7.0   MAIN_2                                                            02/27/2023 19:45:53 PAGE 2   

  55   1        
  56   1        lcd_write_string(display_msg5);
  57   1        lcd_cmd(0xC0);                          //Move cursor to second line
  58   1        lcd_write_string(display_msg6);
  59   1        msdelay(1000);
  60   1        
  61   1        for (i=0; i<5; i++){
  62   2          for(j=0; j<5-i; j++){
  63   3              if(my_array[j+1]<my_array[j]){
  64   4                m=my_array[j+1];
  65   4                my_array[j+1]=my_array[j];
  66   4                my_array[j]=m;
  67   4              }
  68   3          }
  69   2        }
  70   1        
  71   1        for (i=0; i<5; i++){
  72   2          P1=my_array[i];
  73   2          msdelay(5000);
  74   2          P1=0x0F;
  75   2          msdelay(1000);
  76   2        }
  77   1        
  78   1        P1=0x0F;
  79   1        lcd_cmd(0x01); //clear screen
  80   1        msdelay(1000);
  81   1         
  82   1      
  83   1        lcd_cmd(0x80);
  84   1        lcd_write_string(display_msg7);
  85   1        lcd_cmd(0xC0);
  86   1        lcd_write_string(display_msg8);
  87   1        P1=0xFF;
  88   1        msdelay(5000);
  89   1        
  90   1        P1=0x0F;
  91   1        lcd_cmd(0x01);
  92   1        msdelay(1000);
  93   1        
  94   1        j=0;
  95   1        i=P1<<4;
  96   1        m=i &0xF0;
  97   1        for (i=0; i<5; i++){
  98   2          if(m==my_array[i]){
  99   3            j=1;
 100   3            break;
 101   3          }
 102   2        }
 103   1        if(j==1){
 104   2          lcd_cmd(0x01);
 105   2          lcd_cmd(0x80);
 106   2          lcd_write_string(display_msg9);
 107   2          i=(i+1)<<4;
 108   2          P1=i;
 109   2        }
 110   1        else{
 111   2          lcd_cmd(0x80);
 112   2          lcd_write_string(display_msg10);
 113   2          lcd_cmd(0xC0);
 114   2          lcd_write_string(display_msg11);
 115   2          P1=0xFF;
 116   2        }
C51 COMPILER V9.60.7.0   MAIN_2                                                            02/27/2023 19:45:53 PAGE 3   

 117   1        while(1);   
 118   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    642    ----
   CONSTANT SIZE    =    187    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
